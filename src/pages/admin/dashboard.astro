---
import Layout from '../../layouts/Layout.astro';
import { ClerkProvider, useUser } from '@clerk/clerk-react';
import { api } from '../../../convex/_generated/api';
import { ConvexClientProvider, useConvex, useQuery } from 'convex/react';

const publishableKey = import.meta.env.PUBLIC_CLERK_PUBLISHABLE_KEY;
---

<Layout title="Admin Dashboard - MCTD Warrior">
  <ClerkProvider publishableKey={publishableKey} client:only="react">
    <div class="py-6">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
        <h1 class="text-2xl font-semibold text-gray-900">Admin Dashboard</h1>
      </div>
      <div class="max-w-7xl mx-auto px-4 sm:px-6 md:px-8">
        <div class="py-4">
          <div class="bg-white shadow sm:rounded-lg">
            <div class="px-4 py-5 sm:p-6">
              <div class="flex justify-between items-center mb-6">
                <h2 class="text-lg font-medium text-gray-900">Blog Posts</h2>
                <a
                  href="/admin/posts/new"
                  class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary"
                >
                  Create New Post
                </a>
              </div>
              
              <div class="mt-4">
                <div class="flex flex-col">
                  <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
                    <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
                      <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                        <table class="min-w-full divide-y divide-gray-200">
                          <thead class="bg-gray-50">
                            <tr>
                              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Title
                              </th>
                              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Status
                              </th>
                              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                Date
                              </th>
                              <th scope="col" class="relative px-6 py-3">
                                <span class="sr-only">Actions</span>
                              </th>
                            </tr>
                          </thead>
                          <tbody class="bg-white divide-y divide-gray-200" id="posts-table-body">
                            <tr>
                              <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">
                                Loading posts...
                              </td>
                            </tr>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Quick Stats -->
          <div class="mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-3">
            <div class="bg-white overflow-hidden shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <dt class="text-sm font-medium text-gray-500 truncate">Total Posts</dt>
                <dd class="mt-1 text-3xl font-semibold text-gray-900" id="total-posts">-</dd>
              </div>
            </div>
            <div class="bg-white overflow-hidden shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <dt class="text-sm font-medium text-gray-500 truncate">Published Posts</dt>
                <dd class="mt-1 text-3xl font-semibold text-gray-900" id="published-posts">-</dd>
              </div>
            </div>
            <div class="bg-white overflow-hidden shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <dt class="text-sm font-medium text-gray-500 truncate">Draft Posts</dt>
                <dd class="mt-1 text-3xl font-semibold text-gray-900" id="draft-posts">-</dd>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </ClerkProvider>
</Layout>

<script>
  import { ConvexProvider, useQuery } from 'convex/react';
  import { api } from '../../../convex/_generated/api';

  // Function to format date
  function formatDate(date: Date) {
    return new Intl.DateTimeFormat('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    }).format(date);
  }

  // Function to update the posts table
  async function updatePostsTable() {
    const convex = useConvex();
    const posts = await convex.query(api.posts.list);
    
    const tableBody = document.getElementById('posts-table-body');
    if (!tableBody) return;

    if (!posts.length) {
      tableBody.innerHTML = `
        <tr>
          <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">
            No posts found
          </td>
        </tr>
      `;
      return;
    }

    tableBody.innerHTML = posts.map(post => `
      <tr>
        <td class="px-6 py-4 whitespace-nowrap">
          <div class="text-sm font-medium text-gray-900">${post.title}</div>
        </td>
        <td class="px-6 py-4 whitespace-nowrap">
          <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
            post.published 
              ? 'bg-green-100 text-green-800' 
              : 'bg-yellow-100 text-yellow-800'
          }">
            ${post.published ? 'Published' : 'Draft'}
          </span>
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
          ${formatDate(new Date(post._creationTime))}
        </td>
        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
          <a href="/admin/posts/${post._id}/edit" class="text-primary hover:text-primary-dark mr-4">Edit</a>
          <button 
            data-post-id="${post._id}"
            class="text-red-600 hover:text-red-900 delete-post-btn"
          >
            Delete
          </button>
        </td>
      </tr>
    `).join('');

    // Update stats
    const totalPosts = posts.length;
    const publishedPosts = posts.filter(p => p.published).length;
    const draftPosts = totalPosts - publishedPosts;

    document.getElementById('total-posts').textContent = totalPosts;
    document.getElementById('published-posts').textContent = publishedPosts;
    document.getElementById('draft-posts').textContent = draftPosts;

    // Add delete handlers
    document.querySelectorAll('.delete-post-btn').forEach(btn => {
      btn.addEventListener('click', async (e) => {
        const postId = (e.target as HTMLButtonElement).dataset.postId;
        if (!postId) return;

        if (confirm('Are you sure you want to delete this post?')) {
          await convex.mutation(api.posts.deletePost, { id: postId });
          updatePostsTable(); // Refresh the table
        }
      });
    });
  }

  // Initial load
  updatePostsTable();
</script> 